# Generated by Django 4.2.6 on 2023-10-08 00:21

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    replaces = [('Quests', '0001_initial'), ('Quests', '0002_quest_reward'), ('Quests', '0003_quest_investments_unlocks_quest_order'), ('Quests', '0004_remove_quest_investments_unlocks_and_more'), ('Quests', '0005_questcategory_category_completed'), ('Quests', '0006_quest_is_completed'), ('Quests', '0007_remove_quest_is_completed'), ('Quests', '0008_remove_questcategory_category_completed'), ('Quests', '0009_alter_questcategory_options'), ('Quests', '0010_quest_investments_unlocks'), ('Quests', '0011_alter_quest_options'), ('Quests', '0012_remove_questcategory_investment_unlocks')]

    initial = True

    dependencies = [
        ('Investments', '0005_investmentproduct_is_active'),
        ('Investments', '0001_initial'),
        ('Investments', '0004_alter_investment_start_date'),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='QuestCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name_plural': 'Quest Categories',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=255)),
                ('correct_answer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='correct_answer', to='Quests.answer')),
                ('wrong_answers', models.ManyToManyField(blank=True, related_name='wrong_answers', to='Quests.answer')),
            ],
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('questions', models.ManyToManyField(blank=True, to='Quests.question')),
            ],
        ),
        migrations.CreateModel(
            name='Quest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('description', models.TextField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='quests')),
                ('slug', models.SlugField(blank=True, max_length=30, null=True, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('article', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Quests.article')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Quests.questcategory')),
                ('quiz', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Quests.quiz')),
                ('reward', models.FloatField(default=0)),
                ('order', models.IntegerField(blank=True, help_text='Leave Blank for auto increment in same category', null=True)),
                ('investments_unlocks', models.ManyToManyField(blank=True, to='Investments.investmentproduct')),
            ],
            options={
                'verbose_name_plural': 'Quests',
            },
        ),
    ]
